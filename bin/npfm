#!/usr/bin/env node
const argv = require('minimist')(process.argv.slice(2));
if (argv.debug || argv.d) process.env.DEBUG = 'npfm*';
else process.env.DEBUG = process.env.DEBUG || 'npfm*';

const chalk     = require('chalk');
const path      = require('path');
const debug     = require('debug')('npfm');
const { spawn } = require('npm-run');
const packer    = require('../lib/packer');
const commands  = require('../lib/commands');

const { version, homepage, scripts} = require(path.join(__dirname, '../package.json'));
const [ cmd ] = argv._;

const actions = {
  start() {
    spawn('npm', `start -- ${process.argv.slice(3).join(' ')}`.split(' '), {
      stdio: 'inherit'
    });
  },

  create() {
    const args  = `${process.argv.slice(3).join(' ')}`.trim().split(' ');
    if (!args[0]) {
      return new Error('You must supply a create template');
    }

    spawn('npx', args, {
      stdio: 'inherit'
    });
  }
};

for (const command of Object.keys(commands)) {
  actions[command] = commands[command];
}

const availableScripts = [];
for (const script of Object.keys(scripts)) {
  if (script === 'test') continue;
  if (script === 'mocha') continue;
  if (script === 'pretest') continue;

  availableScripts.push(script);
  actions[script] = () => {
    debug('Running script %s', script);
    spawn('npm', `run ${script} -- ${process.argv.slice(3).join(' ')}`.split(' '), {
      stdio: 'inherit'
    });
  }
}

(async () => {
  const action = actions[cmd];
  if (!action) return console.log(`
    npfm v${version} - ${homepage}

    Usage: npfm [command] [options]

    Example:
          npfm [${availableScripts.map((script) => `${script}`).join('|')}] [options]

    Commands
      create      - run a given create template
      init        - run the init template
      serve       - start a development server with watch mode enabled
      pack        - generate a pack file
      pfm         - forwards the arguments and options to pfm executable

    Options
      -h, --help
  `);

  const now = Date.now();
  const err = await action(argv);
  if (err && err.message) {
    console.log(`  ${chalk.red(err.message)}`);
    process.exit(err.code || 1);
  }

  console.log(`  npfm ${cmd} completed in %dms`, Date.now() - now);
  process.exit(0);
})();
